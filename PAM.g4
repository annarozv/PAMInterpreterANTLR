grammar PAM;
progr : series NEWLINE;
series : stmt (';' stmt)*;
stmt : input_stmt | output_stmt | assign_stmt | cond_stmt | loop;
input_stmt : 'read' varlist;
output_stmt : 'write' varlist;
assign_stmt : VARNAME ':=' expr;
cond_stmt : 'if' log_expr 'then' series ('else' series)? 'fi';
loop : 'while' log_expr 'do' series 'end';
compar : expr RELATION expr;
varlist : VARNAME (',' VARNAME)*;
expr : term (WEAKOP term)*;
term : elem (STRONGOP elem)*;
elem : NUMBER | BOOLEAN | VARNAME | '(' expr ')';
log_expr: log_weak_term (DISJUNCTION log_weak_term)* ;
log_weak_term: log_term (CONJUNCTION log_term)* ;
log_term: (NEGATION)* log_elem;
log_elem: compar | VARNAME | BOOLEAN | '(' log_expr ')';
NEWLINE : '\r' ? '\n';
WEAKOP : '+' | '-';
STRONGOP : '*' | '/';
RELATION : '<>' | '=<' | '>='| '=' | '<' | '>' ;
NUMBER : [1-9][0-9]* | [0];
DISJUNCTION: 'or';
CONJUNCTION: 'and';
NEGATION: 'not';
BOOLEAN: 'true' | 'false';
VARNAME : ([a-z]|[A-Z]|'_') ([a-z]|[A-Z]|[0-9]|'_')*;
WS : [ \t\r\n]+ -> skip;